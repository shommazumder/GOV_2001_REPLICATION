n <- 0:300
power.part.c <- 1-pnorm(1.645+(0-2)/(sqrt(200/n)))
plot(power.part.c~n, type="l")
n <- 0:500
power.part.c <- 1-pnorm(1.645+(0-2)/(sqrt(200/n)))
plot(power.part.c~n, type="l")
n <- 0:900
power.part.c <- 1-pnorm(1.645+(0-2)/(sqrt(200/n)))
plot(power.part.c~n, type="l")
which(power.part.c=="0.9")
which(power.part.c="0.9")
power.part.c[390:410]
power.part.c[410:430]
power.part.c[425:445]
power.part.d <- (1-pnorm(1.645+(0-1)/(10*sqrt(2)/4))) +
(pnorm(1.645+(0-1)/(10*sqrt(2)/4)))
power.part.d <- (1-pnorm(1.645+(0-1)/(10*sqrt(2)/4))) +
(pnorm(-1.645+(0-1)/(10*sqrt(2)/4)))
se <- sqrt(200/16)
power.exact <- 1-pnorm(1.645+(0-1)/se
power.exact <- 1-pnorm(1.645+(0-1)/se)
power.exact <- 1-pnorm(1.645+(0-1)/se)
power.part.d <- (1-pnorm(1.645+(0-1)/se) +
(pnorm(-1.645+(0-1)/se)
power.part.d <- (1-pnorm(1.645+(0-1)/se)) +
(pnorm(-1.645+(0-1)/se))
power.part.d <- (1-pnorm(1.645+(0-1)/se)) +
(pnorm(-1.645+(0-1)/se))
power <- 1 - pnorm(1.645+(0-mu)/se)
power.2 <- <- (1-pnorm(1.645+(0-1)/se) +
(pnorm(-1.645+(0-1)/se)
power.2 <- <- (1-pnorm(1.645+(0-1)/se)) +
(pnorm(-1.645+(0-1)/se))
plot(power~mu,type="l")
lines(power.2, color="red")
power.2 <- <- (1-pnorm(1.645+(0-1)/se)) +
(pnorm(-1.645+(0-1)/se))
power.2 <- <- (1-pnorm(1.645+(0-1)/se)) + (pnorm(-1.645+(0-1)/se))
power.2 <- (1-pnorm(1.645+(0-1)/se)) + (pnorm(-1.645+(0-1)/se))
plot(power~mu,type="l")
lines(power.2, color="red")
lines(power.2, col="red")
lines(power.2, col="red")
lines(power.2, col=c"red")
plot(power.2, col=c"red")
power.2 <- (1-pnorm(1.645+(0-mu)/se)) + (pnorm(-1.645+(0-1)/se))
plot(power.2, col="red")
power.2 <- (1-pnorm(1.645+(0-mu)/se)) + (pnorm(-1.645+(0-1)/se))
plot(power~mu,type="l")
plot(power.2, col="red", type=l)
plot(power~mu,type="l")
plot(power.2, col="red", type="l")
mu <- -150:150/100
power <- 1 - pnorm(1.645+(0-mu)/se)
power.2 <- (1-pnorm(1.645+(0-mu)/se)) + (pnorm(-1.645+(0-1)/se))
plot(power~mu,type="l")
plot(power.2, col="red", type="l")
mu <- -1500:1500/100
power <- 1 - pnorm(1.645+(0-mu)/se)
power.2 <- (1-pnorm(1.645+(0-mu)/se)) + (pnorm(-1.645+(0-mu)/se))
plot(power~mu,type="l")
plot(power.2, col="red", type="l")
plot(power~mu,type="l")
lines(power.2, col="red", type="l")
lines(power.2~mu, col="red", type="l")
plot(power~mu,type="l")
lines(power.2~mu, col="red", type="l")
gamma(1)
power.exact <- 1-pnorm(1.96+(0-1)/se)
n <- 0:900
power.part.c <- 1-pnorm(1.96+(0-2)/(sqrt(200/n)))
plot(power.part.c~n, type="l")
power.exact <- 1-pnorm(1.96+(0-1)/se)
power.exact <- 1-pnorm(1.65+(0-1)/se)
#c
n <- 0:900
power.part.c <- 1-pnorm(1.65+(0-2)/(sqrt(200/n)))
plot(power.part.c~n, type="l")
#look at 425 - 435
power.part.d <- (1-pnorm(1.96+(0-1)/se)) +
(pnorm(-1.96+(0-1)/se))
#e
mu <- -1500:1500/100
power <- 1 - pnorm(1.645+(0-mu)/se)
power.2 <- (1-pnorm(1.645+(0-mu)/se)) + (pnorm(-1.645+(0-mu)/se))
power.2 <- (1-pnorm(1.96+(0-mu)/se)) + (pnorm(-1.96+(0-mu)/se))
plot(power~mu,type="l")
lines(power.2~mu, col="red", type="l")
#e
mu <- -1500:1500/100
power <- 1 - pnorm(1.645+(0-mu)/se)
power.2 <- (1-pnorm(1.96+(0-mu)/se)) + (pnorm(-1.96+(0-mu)/se))
plot(power~mu,type="l")
lines(power.2~mu, col="red", type="l")
se <- sqrt(200/16)
power.exact <- 1-pnorm(1.645+(0-1)/se)
ppower.exact
power.exact
power.part.c[425:435]
power.part.c[425:435] -0.9
power.part.d <- (1-pnorm(1.645+(0-1)/se)) +
(pnorm(-1.645+(0-1)/se))
power.part.d
power.part.d <- (1-pnorm(1.96+(0-1)/se)) +
(pnorm(-1.96+(0-1)/se))
power.part.d
plot(power~mu,type="l", ylab="Power")
lines(power.2~mu, col="red", type="l")
lines(power.2~mu, col="red", type="l", lty=2)
plot(power~mu,type="l", ylab="Power")
lines(power.2~mu, col="red", type="l", lty=2)
cbind(power, power.2)
power.graph<- cbind(power, power.2)
ggplot(power.graph, aes(x=mu, y=power.2)) + geom_line()
power.graph<- as.data.frame(cbind(mu, power, power.2))
ggplot(power.graph, aes(x=mu, y=power.2)) + geom_line()
ggplot(power.graph, aes(x=mu, y=power)) + geom_line() +
geom_line(aes(x=mu, y=power.2, col="dodgerblue"))
ggplot(power.graph, aes(x=mu, y=power, col="One-Tailed Test")) + geom_line() +
geom_line(aes(x=mu, y=power.2, col="Two-Tailed Test"))
pdf("Power Curves")
ggplot(power.graph, aes(x=mu, y=power, col="One-Tailed Test")) + geom_line() +
geom_line(aes(x=mu, y=power.2, col="Two-Tailed Test"))
graphics.off()
pdf("powercurves.pdf")
ggplot(power.graph, aes(x=mu, y=power, col="One-Tailed Test")) + geom_line() +
geom_line(aes(x=mu, y=power.2, col="Two-Tailed Test"))
graphics.off()
ggplot(power.graph, aes(x=mu, y=power, col="One-Tailed Test")) + geom_line() +
geom_line(aes(x=mu, y=power.2, col="Two-Tailed Test"))
qgamma(p=0.05, rate=1, shape=10)
num.veg<- 91
p.null <- 0.032
p.harvard <- 9/num.veg
num.veg<- 9
p.null <- 0.032
p.harvard <- num.veg/91
lrt.test <- -2*((num.veg*log(p.null)+(n-num.veg)*log(1-p.null))-
+                        (num.veg*log(p.harvard)+(n-num.veg)*log(1-p.harvard)))
lrt.test
num.veg<- 9
p.null <- 0.032
p.harvard <- num.veg/91
lrt.test <- -2*((num.veg*log(p.null)+(n-num.veg)*log(1-p.null))-
+                        (num.veg*log(p.harvard)+(n-num.veg)*log(1-p.harvard)))
n <- 91
p.harvard <- num.veg/n
n <- 91
lrt.test <- -2*((num.veg*log(p.null)+(n-num.veg)*log(1-p.null))-
p.harvard <- num.veg/n
n <- 91
p.harvard <- num.veg/n
lrt.test <- -2*((num.veg*log(p.null)+(n-num.veg)*log(1-p.null))-
)
n <- 91
p.harvard <- num.veg/n
lrt.test <- -2*((num.veg*log(p.null)+(n-num.veg)*log(1-p.null))-
+                        (num.veg*log(p.harvard)+(n-num.veg)*log(1-p.harvard)))
lrt.test
lrt.test <- -2*((num.veg*log(p.null)+(n-num.veg)*log(1-p.null))-(num.veg*log(p.harvard)+(n-num.veg)*log(1-p.harvard)))
lrt.test
second.term <- (num.veg*log(p.harvard)+(n-num.veg)*log(1-p.harvard))
lrt.test <- -2*(first.term-second.term)
first.term <- (num.veg*log(p.null)+(n-num.veg)*log(1-p.null))
second.term <- (num.veg*log(p.harvard)+(n-num.veg)*log(1-p.harvard))
lrt.test <- -2*(first.term-second.term)
lrt.test
####Problem 4
#a
num.veg<- 9
n <- 91
p.null <- 0.032
p.harvard <- num.veg/n
first.term <- (num.veg*log(p.null)+(n-num.veg)*log(1-p.null))
second.term <- (num.veg*log(p.harvard)+(n-num.veg)*log(1-p.harvard))
lrt.test <- -2*(first.term-second.term)
lrt.test
lrt.critical <- qchisq(1-alpha,df=1)
alpha <- 0.05
lrt.critical <- qchisq(1-alpha,df=1)
lrt.critical
lrt.p.val <- 2*(1-pchisq(lrt.test.stat,df=1))
lrt.p.val <- 2*(1-pchisq(lrt.test,df=1))
lrt.p.val
#a
num.veg<- 9
n <- 91
alpha <- 0.05
p.null <- 0.032
p.harvard <- num.veg/n
first.term <- (num.veg*log(p.null)+(n-num.veg)*log(1-p.null))
second.term <- (num.veg*log(p.harvard)+(n-num.veg)*log(1-p.harvard))
lrt.test <- -2*(first.term-second.term)
lrt.test
lrt.critical <- qchisq(1-alpha,df=1)
lrt.critical
lrt.p <- 2*(1-pchisq(lrt.test,df=1))
lrt.p
score.critical <- qchisq(1-alpha,df=1)
score.critical
score.test.stat <- (num.veg/p.null-(n-num.veg)/(1-p.null))^2/(n/(p.null*(1-p.null)))
score.test.stat
#Score Test
score.crit <- qchisq(1-alpha,df=1)
score.crit
score.test.stat <- (num.veg/p.null-(n-num.veg)/(1-p.null))^2/(n/(p.null*(1-p.null)))
score.test.stat
score.p <- 2*(1-pchisq(score.test.stat,df=1))
score.p
#Wald
wald.test.stat <- (n/(p.harvard*(1-p.harvard)))*(p.harvard-p.null)^2
wald.test.stat
wald.critical <- qchisq(1-alpha,df=1)
wald.critical
wald.p.val <- 2*(1-pchisq(wald.test.stat,df=1))
wald.p.val
#Wald
wald.test.stat <- (n/(p.harvard*(1-p.harvard)))*(p.harvard-p.null)^2
wald.test.stat
wald.crit <- qchisq(1-alpha,df=1)
wald.crit
wald.p <- 2*(1-pchisq(wald.test.stat,df=1))
wald.p
exact.crit <- qbinom(1-alpha,p = p.null, size = n)
exact.crit
exact.test.stat <- num.veg
exact.test.stat
##b
#Exact test
exact.crit <- qbinom(1-alpha,p = p.null, size = n)
exact.crit
exact.test.stat <- num.veg
exact.test.stat
exact.p.val <- 1-pbinom(exact.test.stat,prob = p.null,size=n)
exact.p.val
null.values <- seq(0.001,0.2,by=0.001)
lrt.vec <- -2*((num.veg*log(null.values)+(n-num.veg)*log(1-null.values)) - (num.veg*log(p.harvard)+(n-num.veg)*log(1-p.harvard)))
lrt.ci <- null.values[lrt.vec<lrt.critical]
confint<- c(min(lrt.ci),max(lrt.ci))
confint
#score test
score.vec <- (num.veg/null.values-(n-num.veg)/(1-null.values))^2/(n/(null.values*(1-null.values)))
score.ci <- null.values[score.vec<score.crit]
c(min(score.ci),max(score.ci))
confint.exact<- c(qbinom(0.025,size = n,prob = p.harvard)/91,qbinom(0.975,size=n,prob=p.harvard)/91)
confint.exact
confint.wald
##c
#confidence intervals
#simulate potential values of p
null.values <- seq(0.001,0.2,by=0.001)
#likelihood ratio test
lrt.vec <- -2*((num.veg*log(null.values)+(n-num.veg)*log(1-null.values)) - (num.veg*log(p.harvard)+(n-num.veg)*log(1-p.harvard)))
lrt.ci <- null.values[lrt.vec<lrt.critical]
confint.lrt <- c(min(lrt.ci),max(lrt.ci))
confint.lrt
#score test
score.vec <- (num.veg/null.values-(n-num.veg)/(1-null.values))^2/(n/(null.values*(1-null.values)))
score.ci <- null.values[score.vec<score.crit]
confint.score<- c(min(score.ci),max(score.ci))
confint.score
#wald test
z.two.side <- qnorm(1-alpha/2)
se <- sqrt((p.harvard*(1-p.harvard))/n)
confint.wald <- c(p.harvard-z.two.side*se,p.harvard+z.two.side*se)
confint.wald
#exact test
confint.exact<- c(qbinom(0.025,size = n,prob = p.harvard)/91,qbinom(0.975,size=n,prob=p.harvard)/91)
confint.exact
score.vec <- (num.veg/null.values-(n-num.veg)/(1-
null.values))^2/(n/(null.values*(1-null.values)))
83.33 + 98.92 + 26.48 + 42.96 + 125 + 38.41+68.3 +60.81
22.89 + 235.75 + 544.21
setwd('~/Google Drive/GOV_2001_REPLICATION/01_Data/REPLICATION_APSR_2014_BRQ/')
#load data for tables 2 and 3
tab2_3.dat <- read.dta('REPLICATION_TABLE_2_3_APSR_2014_BRQ.dta')
#load data for sub-national afrobarometer analysis
tab4.dat <- read.dta('REPLICATION_TABLE_4_APSR_2014_BRQ.dta')
#load in grid-level data
library(foreign)
####SET UP####
#set working directory
setwd('~/Google Drive/GOV_2001_REPLICATION/01_Data/REPLICATION_APSR_2014_BRQ/')
#load data for tables 2 and 3
tab2_3.dat <- read.dta('REPLICATION_TABLE_2_3_APSR_2014_BRQ.dta')
#load data for sub-national afrobarometer analysis
tab4.dat <- read.dta('REPLICATION_TABLE_4_APSR_2014_BRQ.dta')
#load in grid-level data
tab567.dat <- read.dta('REPLICATION_TABLE_5_6_7_APSR_2014_BRQ.dta')
#create indicator variables if ever had historic conflict
tab2_3.dat$everWar <- ifelse(tab2_3.dat$WarPrevalence14001700==0,0,1)
tab4.dat$everWar <- ifelse(tab4.dat$WarPrevalence14001700==0,0,1)
####CHECK FOR COMMON SUPPORT (CROSS-NATIONAL)####
#ESTIMATE PROPENSITY SCORE FOR EXTENSIVE MARGIN
pscore.model.crossnat <- glm(everWar ~ f_french + f_pothco + f_belg + f_italy + f_germ +
region_nNUNN + region_sNUNN + region_wNUNN + region_eNUNN,
data=tab2_3.dat,
family=binomial(link='logit'),
na.action = na.exclude)
pscores.crossnat <- predict.glm(pscore.model.crossnat,type='response',na.action = na.exclude)
#pscores.crossnat <- c(pscores[1:16],NA,pscores[17:48])#correct for missing data in Eritrea
tab2_3.dat$pscores <- pscores.crossnat
#PLOT DENSITY OF PROPENSITY SCORES BY TREATMENT
library(ggplot2)
pscore.plot.crossnat <- ggplot(data=tab2_3.dat,aes(x=pscores,group=factor(everWar),colour=factor(everWar)))+
geom_density(size=1.5)+
scale_color_discrete(guide = guide_legend(title='Ever Historical War'))+xlab('Propensity Scores')+
ggtitle('Distribution of Propensity Scores (Before Matching, Cross-National)')
pscore.plot.crossnat
#Run KS test
ks.test(tab2_3.dat$pscores[tab2_3.dat$everWar==1],tab2_3.dat$pscores[tab2_3.dat$everWar==0])
####CHECK FOR COMMON SUPPORT (SUB-NATIONAL)####
#ESTIMATE PROPENSITY SCORE FOR EXTENSIVE MARGIN
pscore.model.subnat <- glm(everWar ~ age+age2+male+urban_dum+ln_export_pop+ln_pop_dens_1400+
factor(education)+factor(occupation)+factor(religion)+factor(living_conditions),
data=tab4.dat,
family=binomial(link='logit'),
na.action = na.exclude)
pscores.subnat <- predict.glm(pscore.model.subnat,type='response',na.action = na.exclude)
tab4.dat$pscores <- pscores.subnat
#PLOT DENSITY OF PROPENSITY SCORES BY TREATMENT
pscore.plot.subnat <- ggplot(data=tab4.dat,aes(x=pscores,group=factor(everWar),colour=factor(everWar)))+
geom_density(size=1.5)+
scale_color_discrete(guide = guide_legend(title='Ever Historical War'))+xlab('Propensity Scores')+
pscore.plot.subnat
ggtitle('Distribution of Propensity Scores (Before Matching, Sub-National)')
pscore.plot.subnat <- ggplot(data=tab4.dat,aes(x=pscores,group=factor(everWar),colour=factor(everWar)))+
geom_density(size=1.5)+
scale_color_discrete(guide = guide_legend(title='Ever Historical War'))+xlab('Propensity Scores')+
ggtitle('Distribution of Propensity Scores (Before Matching, Sub-National)')
pscore.plot.subnat
ks.test(tab567.dat$pscores[tab567.dat$HistoricalConflictGrid==1],
tab567.dat$pscores[tab567.dat$HistoricalConflictGrid==0])
ks.test(tab567.dat$pscores[tab567.dat$HistoricalConflictGrid==1],
tab567.dat$pscores[tab567.dat$HistoricalConflictGrid==0])
#set working directory
setwd('~/Google Drive/GOV_2001_REPLICATION/01_Data/REPLICATION_APSR_2014_BRQ/')
#load data for tables 2 and 3
tab2_3.dat <- read.dta('REPLICATION_TABLE_2_3_APSR_2014_BRQ.dta')
#load data for sub-national afrobarometer analysis
tab4.dat <- read.dta('REPLICATION_TABLE_4_APSR_2014_BRQ.dta')
#load in grid-level data
tab567.dat <- read.dta('REPLICATION_TABLE_5_6_7_APSR_2014_BRQ.dta')
#create indicator variables if ever had historic conflict
tab2_3.dat$everWar <- ifelse(tab2_3.dat$WarPrevalence14001700==0,0,1)
tab4.dat$everWar <- ifelse(tab4.dat$WarPrevalence14001700==0,0,1)
####CHECK FOR COMMON SUPPORT (CROSS-NATIONAL)####
#ESTIMATE PROPENSITY SCORE FOR EXTENSIVE MARGIN
pscore.model.crossnat <- glm(everWar ~ f_french + f_pothco + f_belg + f_italy + f_germ +
region_nNUNN + region_sNUNN + region_wNUNN + region_eNUNN,
data=tab2_3.dat,
family=binomial(link='logit'),
na.action = na.exclude)
pscores.crossnat <- predict.glm(pscore.model.crossnat,type='response',na.action = na.exclude)
#pscores.crossnat <- c(pscores[1:16],NA,pscores[17:48])#correct for missing data in Eritrea
tab2_3.dat$pscores <- pscores.crossnat
#PLOT DENSITY OF PROPENSITY SCORES BY TREATMENT
library(ggplot2)
pscore.plot.crossnat <- ggplot(data=tab2_3.dat,aes(x=pscores,group=factor(everWar),colour=factor(everWar)))+
geom_density(size=1.5)+
scale_color_discrete(guide = guide_legend(title='Ever Historical War'))+xlab('Propensity Scores')+
ggtitle('Distribution of Propensity Scores (Before Matching, Cross-National)')
pscore.plot.crossnat
#Run KS test
ks.test(tab2_3.dat$pscores[tab2_3.dat$everWar==1],tab2_3.dat$pscores[tab2_3.dat$everWar==0])
####CHECK FOR COMMON SUPPORT (SUB-NATIONAL)####
#ESTIMATE PROPENSITY SCORE FOR EXTENSIVE MARGIN
pscore.model.subnat <- glm(everWar ~ age+age2+male+urban_dum+ln_export_pop+ln_pop_dens_1400+
factor(education)+factor(occupation)+factor(religion)+factor(living_conditions),
data=tab4.dat,
family=binomial(link='logit'),
na.action = na.exclude)
pscores.subnat <- predict.glm(pscore.model.subnat,type='response',na.action = na.exclude)
tab4.dat$pscores <- pscores.subnat
#PLOT DENSITY OF PROPENSITY SCORES BY TREATMENT
pscore.plot.subnat <- ggplot(data=tab4.dat,aes(x=pscores,group=factor(everWar),colour=factor(everWar)))+
geom_density(size=1.5)+
scale_color_discrete(guide = guide_legend(title='Ever Historical War'))+xlab('Propensity Scores')+
pscore.plot.subnat
ggtitle('Distribution of Propensity Scores (Before Matching, Sub-National)')
#Run KS test
ks.test(tab4.dat$pscores[tab4.dat$everWar==1],tab4.dat$pscores[tab4.dat$everWar==0])
####CHECK FOR COMMON SUPPORT (GRID-LEVEL)####
#ESTIMATE PROPENSITY SCORE FOR EXTENSIVE MARGIN
pscore.model.grid <- glm(HistoricalConflictGrid ~ d1 + elev_srtm_pred + rough + tempav_8008 +
precsdnew_80_08 + area + lpopdens90 + gridcity1400 + zulu_king + merina + monomotapa +
lozi + malawi + kilwa + lunda + congo + luba + rwanda + buganda + ashanti + yoruba +
ethiopia + axum + wolof + ghana + mali + kush + songhay + kanem_born + clas_egypt +
carthage + factor(country),
data=tab567.dat,
family=binomial(link='logit'),
na.action = na.exclude)
pscores.grid <- predict.glm(pscore.model.grid,type='response',na.action = na.exclude)
tab567.dat$pscores <- pscores.grid
#PLOT DENSITY OF PROPENSITY SCORES BY TREATMENT
pscore.plot.grid <- ggplot(data=tab567.dat,aes(x=pscores,group=factor(HistoricalConflictGrid),colour=factor(HistoricalConflictGrid)))+
geom_density(size=1.5)+
scale_color_discrete(guide = guide_legend(title='Historical Conflict in Grid'))+xlab('Propensity Scores')+
ggtitle('Distribution of Propensity Scores (Before Matching, Grid-Level)')
pscore.plot.grid
#Run KS test
ks.test(tab567.dat$pscores[tab567.dat$HistoricalConflictGrid==1],
tab567.dat$pscores[tab567.dat$HistoricalConflictGrid==0])
####SET UP####
#set working directory
setwd('~/Google Drive/GOV_2001_REPLICATION/01_Data/REPLICATION_APSR_2014_BRQ/')
View(tab2_3.dat)
for (i in 1:length(tab2_3.dat$civilwar_binary)){
if (tab2_3.dat$CivilWarIncidence!= 0){
tab2_3.dat$civilwar_binary[i] <- 1
} else {
tab2_3.dat$civilwar_binary[i] <- 0
}
}
tab2_3.dat$civilwar_binary <- NULL
for (i in 1:length(tab2_3.dat$civilwar_binary)){
if (tab2_3.dat$CivilWarIncidence!= 0){
tab2_3.dat$civilwar_binary[i] <- 1
} else {
tab2_3.dat$civilwar_binary[i] <- 0
}
}
for (i in 1:length(tab2_3.dat$civilwar_binary)){
if (tab2_3.dat$CivilWarIncidence[i]!= 0){
tab2_3.dat$civilwar_binary[i] <- 1
} else {
tab2_3.dat$civilwar_binary[i] <- 0
}
}
tab2.1.binary <- lm(civilwar_binary ~ WarPrevalence14001700 + f_french + f_spain + f_pothco + f_dutch + f_belg + f_italy + f_germ +
region_nNUNN + region_sNUNN + region_wNUNN + region_eNUNN + region_cNUNN,data = tab2_3.dat)
tab2.1.binary$vcovHC <- vcovHC(tab2.1,type='HC1')
summary(tab2.1.binary)
View(tab2_3.dat)
tab2_3.dat$purges_binary <- NULL
for (i in 1:length(tab2_3.dat$purges_binary)){
if (tab2_3.dat$Purges[i]!= 0){
tab2_3.dat$purges_binary[i] <- 1
} else {
tab2_3.dat$purges_binary[i] <- 0
}
}
names(tab2_3.dat)
tab2_3.dat$civilwar_binary
tab2_3.dat$purges_binary
tab2_3.dat$Purges
tab2_3.dat$purges_binary <- NULL
for (i in 1:length(tab2_3.dat$purges_binary)){
if (tab2_3.dat$Purges[i]== 0){
tab2_3.dat$purges_binary[i] <- 0
} else {
tab2_3.dat$purges_binary[i] <- 1
}
}
if (tab2_3.dat$Purges[i]==0.000){
}
for (i in 1:length(tab2_3.dat$purges_binary)){
if (tab2_3.dat$Purges[i]==0.000){
tab2_3.dat$purges_binary[i] <- 0
} else {
tab2_3.dat$purges_binary[i] <- 1
}
}
tab2_3.dat$purges_binary
tab2.3 <- lm(purges_binary ~ WarPrevalence14001700 + f_french + f_spain + f_pothco + f_dutch + f_belg + f_italy + f_germ +
region_nNUNN + region_nNUNN + region_sNUNN + region_wNUNN + region_eNUNN + region_cNUNN,data = tab2_3.dat)
tab2.3$vcovHC <- vcovHC(tab2.3,type='HC1')
tab2.4 <- lm(purges_binary ~ WarPrevalence14001700 + lrgdpl2631970 + legor_frNUNN + f_french + f_spain + f_pothco + f_dutch + f_belg +
f_italy + f_germ + region_nNUNN + region_sNUNN + region_wNUNN + region_eNUNN,data=tab2_3.dat)
tab2.4$vcovHC <- vcovHC(tab2.4,type='HC1')
library(hccm)
??vcov
library("Hmisc", lib.loc="~/Library/R/3.1/library")
tab2.2.binary$vcovHC <- vcovHC(tab2.2,type='HC1')
?vcovHC
??vcovHC
library(plm)
tab2.3.binary <- lm(purges_binary ~ WarPrevalence14001700 + f_french + f_spain + f_pothco + f_dutch + f_belg + f_italy + f_germ +
region_nNUNN + region_nNUNN + region_sNUNN + region_wNUNN + region_eNUNN + region_cNUNN,data = tab2_3.dat)
tab2.3.binary$vcovHC <- vcovHC(tab2.3.binary,type='HC1')
tab2.4.binary <- lm(purges_binary ~ WarPrevalence14001700 + lrgdpl2631970 + legor_frNUNN + f_french + f_spain + f_pothco + f_dutch + f_belg +
f_italy + f_germ + region_nNUNN + region_sNUNN + region_wNUNN + region_eNUNN,data=tab2_3.dat)
tab2.4.binary$vcovHC <- vcovHC(tab2.4.binary,type='HC1')
tab2.1.binary <- lm(civilwar_binary ~ WarPrevalence14001700 + f_french + f_spain + f_pothco + f_dutch + f_belg + f_italy + f_germ +
region_nNUNN + region_sNUNN + region_wNUNN + region_eNUNN + region_cNUNN,data = tab2_3.dat)
tab2.1.binary$vcovHC <- vcovHC(tab2.1.binary,type='HC1')
library(sandwich)
tab2.1.binary$vcovHC <- vcovHC(tab2.1.binary,type='HC1')
tab2.2.binary <- lm(civilwar_binary ~ WarPrevalence14001700 + lrgdpl2631970 + region_nNUNN + region_sNUNN + region_wNUNN + region_eNUNN +
region_cNUNN + f_french + f_spain + f_pothco + f_dutch + f_belg + f_italy + f_germ +
abs_latitudeNUNN + longitudeNUNN + rain_minNUNN  + humid_maxNUNN +  low_tempNUNN + ln_coastline_areaNUNN +
island_dumNUNN + islam + legor_frNUNN + ln_avg_gold_pop + ln_avg_oil_pop + ln_avg_all_diamonds_pop + ETHPOL + yellow + rugged,
data=tab2_3.dat)
tab2.2.binary$vcovHC <- vcovHC(tab2.2.binary,type='HC1')
tab2.3.binary <- lm(purges_binary ~ WarPrevalence14001700 + f_french + f_spain + f_pothco + f_dutch + f_belg + f_italy + f_germ +
region_nNUNN + region_nNUNN + region_sNUNN + region_wNUNN + region_eNUNN + region_cNUNN,data = tab2_3.dat)
tab2.3.binary$vcovHC <- vcovHC(tab2.3.binary,type='HC1')
tab2.4.binary <- lm(purges_binary ~ WarPrevalence14001700 + lrgdpl2631970 + legor_frNUNN + f_french + f_spain + f_pothco + f_dutch + f_belg +
f_italy + f_germ + region_nNUNN + region_sNUNN + region_wNUNN + region_eNUNN,data=tab2_3.dat)
tab2.4.binary$vcovHC <- vcovHC(tab2.4.binary,type='HC1')
tab2.7.binary <- lm(civilwar_binary ~ WarPrevalence14001700 + ln_export_area + ln_pop_dens_1400 + lrgdpl2631970 + region_nNUNN + region_sNUNN +
region_wNUNN + region_eNUNN + region_cNUNN + f_french + f_spain + f_pothco + f_dutch + f_belg + f_italy +
f_germ + abs_latitudeNUNN + longitudeNUNN + rain_minNUNN + humid_maxNUNN + low_tempNUNN +
ln_coastline_areaNUNN + island_dumNUNN + islam + legor_frNUNN + ln_avg_gold_pop + ln_avg_oil_pop + ln_avg_all_diamonds_pop +
ETHPOL + yellow + rugged,data = tab2_3.dat)
tab2.7.binary$vcovHC <- vcovHC(tab2.7.binary,type='HC1')
tab2.8.binary <- lm(purges_binary ~ WarPrevalence14001700 + ln_export_area + ln_pop_dens_1400 + lrgdpl2631970 + region_nNUNN +
region_sNUNN + region_wNUNN + region_eNUNN + region_cNUNN + f_french + f_spain + f_pothco + f_dutch + f_belg +
f_italy + f_germ + abs_latitudeNUNN + longitudeNUNN + rain_minNUNN + humid_maxNUNN + low_tempNUNN +
ln_coastline_areaNUNN + island_dumNUNN + islam + legor_frNUNN + ln_avg_gold_pop + ln_avg_oil_pop +
ln_avg_all_diamonds_pop + ETHPOL + yellow + rugged,data=tab2_3.dat)
tab2.8.binary$vcovHC <- vcovHC(tab2.8.binary,type='HC1')
