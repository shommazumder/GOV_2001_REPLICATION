coffee <- merge(coffee, population, by="district")
coffee$intensity <- 100*(coffee$n.coffee/coffee$n.households)
coffee$intensity.ag <- 100*(coffee$n.coffee/coffee$n.ag.households)
summary(coffee$intensity)
# Indicator variable for high coffee production
coffee$high.production <- ifelse(coffee$intensity > 5, 1, 0)
######## Instrumenting for coffee production ##################################################################################################################
# http://zevross.com/blog/2015/03/30/map-and-analyze-raster-data-in-r/
adm1 <- readRDS("Data/UGA_adm1.rds")
proj4string(adm1) <- CRS("+proj=longlat +datum=WGS84")
suitability <- raster(paste(getwd(), "/Data/GAEZ/Robusta intermediate/data.asc", sep = ""))
#suitability <- raster(paste(getwd(), "/Data/GAEZ/Robusta low/data.asc", sep = ""))
#suitability <- raster(paste(getwd(), "/Data/GAEZ/Low/data.asc", sep = ""))
#suitability <- raster(paste(getwd(), "/Data/GAEZ/Intermediate/data.asc", sep = ""))
suitability <- raster::crop(suitability, extent(adm1))
suitability <- mask(suitability, adm1)
extent(suitability) <- extent(adm1)
pdf("Plots/coffee_suitability_low.pdf",width=8,height=8)
plot(suitability)
plot(adm1,add=TRUE)
dev.off()
suitability.regions <- raster::extract(suitability, adm1, fun = mean, na.rm = T, small = T, df = T)
colnames(suitability.regions) <- c("ID_1", "suitability")
adm1 <- merge(adm1, suitability.regions)
adm1 <- merge(adm1, coffee, by.x="NAME_1", by.y="district")
ln.intensity <- log(adm1$intensity)
ln.suitability <- log(adm1$suitability)
plot(x=log(adm1$intensity), y=adm1$suitability)
## Probably the worst instrument of all time
summary(lm(log(intensity)~log(suitability),data=adm1))
######## Location of aid projects ##################################################################################################################
# Tutorials
# http://spatial.ly/2013/12/introduction-spatial-data-ggplot2/
# https://pakillo.github.io/R-GIS-tutorial/
# http://www.maths.lancs.ac.uk/~rowlings/Teaching/UseR2012/cheatsheet.html
pdf("Plots/adm1.pdf",width=8,height=8)
plot(adm1)
dev.off()
aid.locations <- read.csv("Data/Uganda Aid Management Platform/data/level_1a.csv")
aid.locations$ad_sector_codes <- as.numeric(as.character(aid.locations$ad_sector_codes))
aid.locations$CHINA <- 0
china <- read.csv("Data/china.csv")
china <- china[,c(1:5,34:59)]
china$CHINA <- 1
aid.locations <- dplyr::bind_rows(aid.locations, china)
# Get rid of projects coded at the national or top-level
drop.regions <- c("ADM1","PCLI")
aid.locations <- subset(aid.locations,!(aid.locations$location_type_code %in% drop.regions))
coordinates(aid.locations) <- c("longitude", "latitude")
proj4string(aid.locations) <- CRS("+proj=longlat +datum=WGS84")
aid.locations <- subset(aid.locations,!(aid.locations$location_type_code %in% drop.regions))
coordinates(aid.locations) <- c("longitude", "latitude")
proj4string(aid.locations) <- CRS("+proj=longlat +datum=WGS84")
aid.locations <- read.csv("Data/Uganda Aid Management Platform/data/level_1a.csv")
#aid.locations$ad_sector_codes <- as.numeric(as.character(aid.locations$ad_sector_codes))
aid.locations$CHINA <- 0
china <- read.csv("Data/china.csv")
china <- china[,c(1:5,34:59)]
china$CHINA <- 1
aid.locations <- dplyr::bind_rows(aid.locations, china)
# Get rid of projects coded at the national or top-level
drop.regions <- c("ADM1","PCLI")
aid.locations <- subset(aid.locations,!(aid.locations$location_type_code %in% drop.regions))
coordinates(aid.locations) <- c("longitude", "latitude")
proj4string(aid.locations) <- CRS("+proj=longlat +datum=WGS84")
aid.locations <- read.csv("Data/Uganda Aid Management Platform/data/level_1a.csv")
aid.locations$ad_sector_codes <- as.numeric(as.character(aid.locations$ad_sector_codes))
aid.locations$CHINA <- 0
china <- read.csv("Data/china.csv")
china <- china[,c(1:5,34:59)]
china$CHINA <- 1
#aid.locations <- dplyr::bind_rows(aid.locations, china)
# Get rid of projects coded at the national or top-level
drop.regions <- c("ADM1","PCLI")
aid.locations <- subset(aid.locations,!(aid.locations$location_type_code %in% drop.regions))
coordinates(aid.locations) <- c("longitude", "latitude")
proj4string(aid.locations) <- CRS("+proj=longlat +datum=WGS84")
gmap.ug <- gmap("Uganda")  # Uganda base map - figure out how to overlay below adm1 and aid.locations?
plot(gmap.ug)
gg.coords <- as.data.frame(aid.locations@coords)
plot.locations <- ggplot()+
theme_bw()+
geom_polygon(data=adm1,  aes(x=long, y=lat, group=group),
fill="white", color="grey")+
geom_point(data=gg.coords,  aes(x=longitude, y=latitude),
color="cadetblue", size=3, alpha=0.5)+
coord_equal()+
theme(line = element_blank(),text = element_blank(),line = element_blank(),title = element_blank())
pdf("Plots/adm1_projects.pdf", width=10, height=10)
print(plot.locations)
dev.off()
# spatial join project locations to adm1 dataset
pt.in.poly <- over(aid.locations, adm1, fn = NULL)
aid.locations$adm1 <- pt.in.poly$ID_1
project.counts <- as.data.frame(table(aid.locations$adm1))
colnames(project.counts) <- c("ID_1","n.proj")
adm1 <- merge(adm1, project.counts, by="ID_1")
adm1@data$n.proj <- ifelse(is.na(adm1@data$n.proj),0,adm1@data$n.proj)
#View(adm1@data)
colourfunc <- colorRampPalette(c("white", "darkblue"))
adm1@data$Col.projects <- colourfunc(50)[as.numeric(cut(adm1@data$n.proj,breaks = 50))]
pdf("Plots/project_density.pdf",width=8,height=8)
plot(adm1,col=adm1@data$Col.projects)
dev.off()
colourfunc <- colorRampPalette(c("white", "firebrick3"))
adm1@data$Col.intensity <- colourfunc(50)[as.numeric(cut(adm1@data$intensity.ag,breaks = 50))]
pdf("Plots/coffee_intensity.pdf",width=8,height=8)
plot(adm1,col=adm1@data$Col.intensity)
dev.off()
pdf("Plots/coffee_high_production.pdf",width=8,height=8)
plot(adm1,col=adm1@data$high.production)
dev.off()
######## Analysis ##################################################################################################################
grouped.data <- aid.locations@data %>% group_by(adm1, transactions_start_year)
analysis <- summarise(grouped.data,n())
colnames(analysis)[3] <- "n.projects"
id <- rep(1:58,each=23)
year <- rep(1991:2013,58)
full.analysis <- cbind(id,year)
analysis <- merge(full.analysis,analysis, by.x=c("id","year"), by.y=c("adm1","transactions_start_year"), all.x=T)
analysis$n.projects <- ifelse(is.na(analysis$n.projects),0,analysis$n.projects)
analysis <- merge(analysis, price, by.x="year", by.y="Year")
analysis <- merge(x = analysis, y = adm1@data[,c("NAME_1","ID_1","intensity","intensity.ag","high.production")], by.x="id", by.y="ID_1", all.x=T)
keep.years.2 <- seq(1992,2014,2)
keep.years.3 <- seq(1991,2014,3)
analysis$keep.2 <- ifelse(analysis$year %in% keep.years.2,1,0)
analysis$keep.3 <- ifelse(analysis$year %in% keep.years.3,1,0)
analysis <- analysis[order(analysis$NAME_1, analysis$year),]
analysis$unique.id <- 1:length(analysis$id)
for (i in 1:length(analysis$id)){
analysis$n.projects.2year[i] <- ifelse(analysis$year[i] %in% keep.years.2, analysis$n.projects[i] + analysis$n.projects[i+1], NA)
analysis$n.projects.3year[i] <- ifelse(analysis$year[i] %in% keep.years.3, analysis$n.projects[i] + analysis$n.projects[i+1]  + analysis$n.projects[i+2], NA)
analysis$Price.2year <- ifelse(analysis$year[i] %in% keep.years.2, mean(c(analysis$Price[i],analysis$Price[i+1])), NA)
analysis$Price.3year <- ifelse(analysis$year[i] %in% keep.years.3, mean(c(analysis$Price[i],analysis$Price[i+1],analysis$Price[i+2])), NA)
}
analysis$any.projects <- ifelse(analysis$n.projects>0,1,0)
analysis$any.projects.2year <- ifelse(analysis$n.projects.2year>0,1,0)
analysis$any.projects.3year <- ifelse(analysis$n.projects.3year>0,1,0)
plot.nprojects <- ggplot(analysis)+
theme_bw()+
geom_histogram(aes(x=n.projects, y=..density..), colour="grey4", binwidth=1, fill=NA)+
geom_histogram(aes(x=n.projects.2year, y=..density..), binwidth=1, colour="indianred", fill=NA)+
geom_histogram(aes(x=n.projects.3year, y=..density..), binwidth=1, colour="dodgerblue", fill=NA)+
xlab("Number of projects")+
ylab("Density")
pdf("Plots/outcome_distribution.pdf",width=8,height=6)
print(plot.nprojects)
dev.off()
ug.central <- c("Kalangala","Kampala","Kiboga","Luwero","Masaka","Mpigi","Mubende","Mukono","Nakasongola","Rakai","Sembabule","Kayunga","Wakiso")
ug.eastern <- c("Bugiri","Busia","Iganga","Jinja","Kamuli","Kapchorwa","Katakwi","Kumi","Mbale","Pallisa","Soroti","Tororo","Kaberamaido","Mayuge","Sironko")
ug.northern <- c("Adjumani","Apac","Arua","Gulu","Kitgum","Kotido","Lira","Moroto","Moyo","Nebbi","Nakapiripirit","Pader","Yumbe")
ug.western <- c("Bundibugyo","Bushenyi","Hoima","Kabale","Kabarole","Kasese","Kibaale","Kisoro","Masindi","Mbarara","Ntungamo","Rukungiri","Kamwenge","Kanungu","Kyenjojo")
analysis$region <- ifelse(analysis$NAME_1 %in% ug.central, "Central", ifelse(analysis$NAME_1 %in% ug.eastern, "Eastern", ifelse(analysis$NAME_1 %in% ug.northern, "Northern", ifelse(analysis$NAME_1 %in% ug.western, "Western", NA))))
View(analysis)
coplot(n.projects ~ year|NAME_1, type="b", data=analysis)
coplot(n.projects ~ year|NAME_1, type="b", data=analysis, year > 1999)
dev.off()
coplot(n.projects ~ year|NAME_1, type="b", data=analysis, year > 1999)
dev.off()
coplot(n.projects ~ year|NAME_1, type="b", data=analysis[analysis$year>1999,])
summary(fixed <- plm(n.projects ~ log(Price)*intensity, data=Panel, index=c("NAME_1", "year"), model="within"))
summary(fixed <- plm(n.projects ~ log(Price)*intensity, data=analysis, index=c("NAME_1", "year"), model="within"))
fixef(fixed)
pFtest(fixed, ols)
summary(lm(n.projects ~ factor(year) + factor(NAME_1) + log(Price)*intensity, data=analysis, year > 1999))
pFtest(fixed, out)
summary(out <- lm(n.projects ~ factor(year) + factor(NAME_1) + log(Price)*intensity, data=analysis, year > 1999))
pFtest(fixed, out)
summary(fixed <- plm(n.projects ~ log(Price)*high.production, data=analysis, index=c("NAME_1", "year"), model="within"))
hist(adm1$intensity)
summary(adm1$intensity)
coffee$high.production <- ifelse(coffee$intensity > 2.5, 1, 0)
summary(fixed <- plm(n.projects ~ log(Price)*high.production, data=analysis, index=c("NAME_1", "year"), model="within"))
rm(list = ls())
library(ggplot2)
library(stargazer)
library(xtable)
library(grid)
library(car)
library(reshape2)
library(rgdal)
library(sp)
library(raster)
library(rasterVis)
library(maptools)
library(rgeos)
library(dismo)
library(XML)
library(spatialEco)
library(dplyr)
library(tidyr)
library(plm)
library(multiwayvcov)
setwd("~/Google Drive (Harvard)/Quant 2 Research Design/")
#setwd("~/Google Drive/Quant 2 Research Design/")
################################################################################################################
# (1) Coffee price trends
# (2) Intensity of coffee cultivation
# (3) Instrumenting for coffee cultivation
# (4) Aid location coding
# (5) Analysis
# (6) China wrangling
######## Coffee price trends ######################################################################################
price.month <- read.csv("Data/Coffee prices/ICO_monthly_prices.csv")
price <- read.csv("Data/Coffee prices/ICO_yearly_prices.csv")
neg.start.year <- 1996
neg.end.year <- 2001
pos.start.year <- 2004
pos.end.year <- 2011
plot.price <- ggplot(price, aes(x=Year, y=Price)) +
theme_bw()+
geom_vline(aes(xintercept=neg.start.year), colour = "indianred", size = 1) +
geom_vline(aes(xintercept=neg.end.year), colour = "indianred", size = 1) +
geom_vline(aes(xintercept=pos.start.year), colour = "dodgerblue", size = 1) +
geom_vline(aes(xintercept=pos.end.year), colour = "dodgerblue", size = 1) +
ylab("International price of Robusta coffee")+
geom_line(size=1, alpha=0.5)
pdf("Plots/coffee_price.pdf",width=8,height=6)
print(plot.price)
dev.off()
price.fall <- 100*(1-price$Price[price$Year==neg.end.year]/price$Price[price$Year==neg.start.year])
price.rise <- 100*(1-price$Price[price$Year==pos.end.year]/price$Price[price$Year==pos.start.year])
######## Coffee intensity ######################################################################################
## Process district-level coffee data from 2002 National Census
coffee <- read.csv("Data/Coffee cultivation/Uganda_2002_pop_housing_2002.csv")
dim(coffee)
coffee <- as.data.frame(coffee[,c(3:7)])
drop.obs <- c(1:8,9,23,24,40,41,55,56)
coffee$keep.obs <- !(1:71 %in% drop.obs)
coffee <- subset(coffee,coffee$keep.obs==T)
coffee <- coffee[,1:5]
colnames(coffee) <- c("district","n.ag.households","n.coffee","percent","total.plots")
coffee$n.ag.households <- gsub(",","",coffee$n.ag.households)
coffee$n.coffee <- gsub(",","",coffee$n.coffee)
coffee$total.plots <- gsub(",","",coffee$total.plots)
coffee$n.ag.households <- as.numeric(as.character(coffee$n.ag.households))
coffee$n.coffee <- as.numeric(as.character(coffee$n.coffee))
coffee$percent <- as.numeric(as.character(coffee$percent))
coffee$total.plots <- as.numeric(as.character(coffee$total.plots))
## Process district-level population data from 2002 National Census
population <- read.csv("Data/Coffee cultivation/Uganda_2002_pop_housing_2002_totalpop.csv")
dim(population)
population <- as.data.frame(population[,c(3:6)])
drop.obs <- c(1:8,9,23,24,40,41,55,56,72)
population$keep.obs <- !(1:72 %in% drop.obs)
population <- subset(population,population$keep.obs==T)
population <- population[,c(1:2,4)]
colnames(population) <- c("district","n.households","percent.ag")
population$n.households <- gsub(",","",population$n.households)
population$n.households <- as.numeric(as.character(population$n.households))
population$percent.ag <- as.numeric(as.character(population$percent.ag))
coffee <- merge(coffee, population, by="district")
coffee$intensity <- 100*(coffee$n.coffee/coffee$n.households)
coffee$intensity.ag <- 100*(coffee$n.coffee/coffee$n.ag.households)
summary(coffee$intensity)
# Indicator variable for high coffee production
coffee$high.production <- ifelse(coffee$intensity > 2.5, 1, 0)
######## Instrumenting for coffee production ##################################################################################################################
# http://zevross.com/blog/2015/03/30/map-and-analyze-raster-data-in-r/
adm1 <- readRDS("Data/UGA_adm1.rds")
proj4string(adm1) <- CRS("+proj=longlat +datum=WGS84")
suitability <- raster(paste(getwd(), "/Data/GAEZ/Robusta intermediate/data.asc", sep = ""))
#suitability <- raster(paste(getwd(), "/Data/GAEZ/Robusta low/data.asc", sep = ""))
#suitability <- raster(paste(getwd(), "/Data/GAEZ/Low/data.asc", sep = ""))
#suitability <- raster(paste(getwd(), "/Data/GAEZ/Intermediate/data.asc", sep = ""))
suitability <- raster::crop(suitability, extent(adm1))
suitability <- mask(suitability, adm1)
extent(suitability) <- extent(adm1)
pdf("Plots/coffee_suitability_low.pdf",width=8,height=8)
plot(suitability)
plot(adm1,add=TRUE)
dev.off()
suitability.regions <- raster::extract(suitability, adm1, fun = mean, na.rm = T, small = T, df = T)
colnames(suitability.regions) <- c("ID_1", "suitability")
adm1 <- merge(adm1, suitability.regions)
adm1 <- merge(adm1, coffee, by.x="NAME_1", by.y="district")
ln.intensity <- log(adm1$intensity)
ln.suitability <- log(adm1$suitability)
plot(x=log(adm1$intensity), y=adm1$suitability)
## Probably the worst instrument of all time
#summary(lm(log(intensity)~log(suitability),data=adm1))
######## Location of aid projects ##################################################################################################################
# Tutorials
# http://spatial.ly/2013/12/introduction-spatial-data-ggplot2/
# https://pakillo.github.io/R-GIS-tutorial/
# http://www.maths.lancs.ac.uk/~rowlings/Teaching/UseR2012/cheatsheet.html
pdf("Plots/adm1.pdf",width=8,height=8)
plot(adm1)
dev.off()
aid.locations <- read.csv("Data/Uganda Aid Management Platform/data/level_1a.csv")
aid.locations$ad_sector_codes <- as.numeric(as.character(aid.locations$ad_sector_codes))
aid.locations$CHINA <- 0
china <- read.csv("Data/china.csv")
china <- china[,c(1:5,34:59)]
china$CHINA <- 1
#aid.locations <- dplyr::bind_rows(aid.locations, china)
# Get rid of projects coded at the national or top-level
drop.regions <- c("ADM1","PCLI")
aid.locations <- subset(aid.locations,!(aid.locations$location_type_code %in% drop.regions))
coordinates(aid.locations) <- c("longitude", "latitude")
proj4string(aid.locations) <- CRS("+proj=longlat +datum=WGS84")
gmap.ug <- gmap("Uganda")  # Uganda base map - figure out how to overlay below adm1 and aid.locations?
plot(gmap.ug)
gg.coords <- as.data.frame(aid.locations@coords)
plot.locations <- ggplot()+
theme_bw()+
geom_polygon(data=adm1,  aes(x=long, y=lat, group=group),
fill="white", color="grey")+
geom_point(data=gg.coords,  aes(x=longitude, y=latitude),
color="cadetblue", size=3, alpha=0.5)+
coord_equal()+
theme(line = element_blank(),text = element_blank(),line = element_blank(),title = element_blank())
pdf("Plots/adm1_projects.pdf", width=10, height=10)
print(plot.locations)
dev.off()
# spatial join project locations to adm1 dataset
pt.in.poly <- over(aid.locations, adm1, fn = NULL)
aid.locations$adm1 <- pt.in.poly$ID_1
project.counts <- as.data.frame(table(aid.locations$adm1))
colnames(project.counts) <- c("ID_1","n.proj")
adm1 <- merge(adm1, project.counts, by="ID_1")
adm1@data$n.proj <- ifelse(is.na(adm1@data$n.proj),0,adm1@data$n.proj)
#View(adm1@data)
colourfunc <- colorRampPalette(c("white", "darkblue"))
adm1@data$Col.projects <- colourfunc(50)[as.numeric(cut(adm1@data$n.proj,breaks = 50))]
pdf("Plots/project_density.pdf",width=8,height=8)
plot(adm1,col=adm1@data$Col.projects)
dev.off()
colourfunc <- colorRampPalette(c("white", "firebrick3"))
adm1@data$Col.intensity <- colourfunc(50)[as.numeric(cut(adm1@data$intensity.ag,breaks = 50))]
pdf("Plots/coffee_intensity.pdf",width=8,height=8)
plot(adm1,col=adm1@data$Col.intensity)
dev.off()
pdf("Plots/coffee_high_production.pdf",width=8,height=8)
plot(adm1,col=adm1@data$high.production)
dev.off()
######## Analysis ##################################################################################################################
grouped.data <- aid.locations@data %>% group_by(adm1, transactions_start_year)
analysis <- summarise(grouped.data,n())
colnames(analysis)[3] <- "n.projects"
id <- rep(1:58,each=23)
year <- rep(1991:2013,58)
full.analysis <- cbind(id,year)
analysis <- merge(full.analysis,analysis, by.x=c("id","year"), by.y=c("adm1","transactions_start_year"), all.x=T)
analysis$n.projects <- ifelse(is.na(analysis$n.projects),0,analysis$n.projects)
analysis <- merge(analysis, price, by.x="year", by.y="Year")
analysis <- merge(x = analysis, y = adm1@data[,c("NAME_1","ID_1","intensity","intensity.ag","high.production")], by.x="id", by.y="ID_1", all.x=T)
keep.years.2 <- seq(1992,2014,2)
keep.years.3 <- seq(1991,2014,3)
analysis$keep.2 <- ifelse(analysis$year %in% keep.years.2,1,0)
analysis$keep.3 <- ifelse(analysis$year %in% keep.years.3,1,0)
analysis <- analysis[order(analysis$NAME_1, analysis$year),]
analysis$unique.id <- 1:length(analysis$id)
for (i in 1:length(analysis$id)){
analysis$n.projects.2year[i] <- ifelse(analysis$year[i] %in% keep.years.2, analysis$n.projects[i] + analysis$n.projects[i+1], NA)
analysis$n.projects.3year[i] <- ifelse(analysis$year[i] %in% keep.years.3, analysis$n.projects[i] + analysis$n.projects[i+1]  + analysis$n.projects[i+2], NA)
analysis$Price.2year <- ifelse(analysis$year[i] %in% keep.years.2, mean(c(analysis$Price[i],analysis$Price[i+1])), NA)
analysis$Price.3year <- ifelse(analysis$year[i] %in% keep.years.3, mean(c(analysis$Price[i],analysis$Price[i+1],analysis$Price[i+2])), NA)
}
analysis$any.projects <- ifelse(analysis$n.projects>0,1,0)
analysis$any.projects.2year <- ifelse(analysis$n.projects.2year>0,1,0)
analysis$any.projects.3year <- ifelse(analysis$n.projects.3year>0,1,0)
plot.nprojects <- ggplot(analysis)+
theme_bw()+
geom_histogram(aes(x=n.projects, y=..density..), colour="grey4", binwidth=1, fill=NA)+
geom_histogram(aes(x=n.projects.2year, y=..density..), binwidth=1, colour="indianred", fill=NA)+
geom_histogram(aes(x=n.projects.3year, y=..density..), binwidth=1, colour="dodgerblue", fill=NA)+
xlab("Number of projects")+
ylab("Density")
pdf("Plots/outcome_distribution.pdf",width=8,height=6)
print(plot.nprojects)
dev.off()
ug.central <- c("Kalangala","Kampala","Kiboga","Luwero","Masaka","Mpigi","Mubende","Mukono","Nakasongola","Rakai","Sembabule","Kayunga","Wakiso")
ug.eastern <- c("Bugiri","Busia","Iganga","Jinja","Kamuli","Kapchorwa","Katakwi","Kumi","Mbale","Pallisa","Soroti","Tororo","Kaberamaido","Mayuge","Sironko")
ug.northern <- c("Adjumani","Apac","Arua","Gulu","Kitgum","Kotido","Lira","Moroto","Moyo","Nebbi","Nakapiripirit","Pader","Yumbe")
ug.western <- c("Bundibugyo","Bushenyi","Hoima","Kabale","Kabarole","Kasese","Kibaale","Kisoro","Masindi","Mbarara","Ntungamo","Rukungiri","Kamwenge","Kanungu","Kyenjojo")
analysis$region <- ifelse(analysis$NAME_1 %in% ug.central, "Central", ifelse(analysis$NAME_1 %in% ug.eastern, "Eastern", ifelse(analysis$NAME_1 %in% ug.northern, "Northern", ifelse(analysis$NAME_1 %in% ug.western, "Western", NA))))
## Dummy intensity
summary(out <- lm(n.projects ~ factor(year) + factor(NAME_1) + log(Price)*high.production, data=analysis, year > 1999))
summary(out <- lm(n.projects.2year ~ factor(year) + factor(NAME_1) + log(Price)*high.production, data=analysis, year > 1999))
summary(out <- lm(n.projects.3year ~ factor(year) + factor(NAME_1) + log(Price)*high.production, data=analysis, year > 1999))
## Continuous intensity
summary(out <- lm(n.projects ~ factor(year) + factor(NAME_1) + log(Price)*intensity, data=analysis, year > 1999))
summary(lm(n.projects.2year ~ factor(year) + factor(NAME_1) + log(Price)*intensity, data=analysis, year > 1999))
summary(lm(n.projects.3year ~ factor(year) + factor(NAME_1) + log(Price)*intensity, data=analysis, year > 1999))
## Any projects
summary(out <- lm(any.projects ~ factor(year) + factor(NAME_1) + log(Price)*high.production, data=analysis, year > 1999))
summary(out <- lm(any.projects.2year ~ factor(year) + factor(NAME_1) + log(Price)*high.production, data=analysis, year > 1999))
summary(out <- lm(any.projects.3year ~ factor(year) + factor(NAME_1) + log(Price)*high.production, data=analysis, year > 1999))
summary(fixed <- plm(n.projects ~ log(Price)*intensity, data=analysis, index=c("NAME_1", "year"), model="within"))
fixef(fixed)
summary(fixed <- plm(n.projects ~ log(Price)*high.production, data=analysis, index=c("NAME_1", "year"), model="within"))
summary(fixed <- plm(n.projects ~ log(Price)*high.production, data=analysis, index=c("NAME_1", "year"), model="within", year > 1999))
?plm
analysis[analysis$year > 1999, ]
head(analysis[analysis$year > 1999, ])
summary(fixed <- plm(n.projects ~ log(Price)*high.production, data=analysis[analysis$year > 1999, ], index=c("NAME_1", "year"), model="within"))
summary(fixed <- plm(n.projects ~ log(Price)*intensity, data=analysis[analysis$year > 1999, ], index=c("NAME_1", "year"), model="within"))
fixef(fixed)
summary(fixed <- plm(n.projects ~ log(Price)*high.production, data=analysis[analysis$year > 1999, ], index=c("NAME_1", "year"), model="within"))
fixef(fixed)
summary(out <- lm(n.projects ~ factor(year) + factor(NAME_1) + log(Price)*high.production, data=analysis, year > 1999))
summary(out <- lm(n.projects ~ factor(year) + factor(NAME_1) + log(Price)*intensity, data=analysis, year > 1999))
summary(lm(n.projects.2year ~ factor(year) + factor(NAME_1) + log(Price)*intensity, data=analysis, year > 1999))
summary(lm(n.projects.3year ~ factor(year) + factor(NAME_1) + log(Price)*intensity, data=analysis, year > 1999))
## Any projects
summary(out <- lm(any.projects ~ factor(year) + factor(NAME_1) + log(Price)*high.production, data=analysis, year > 1999))
summary(out <- lm(any.projects.2year ~ factor(year) + factor(NAME_1) + log(Price)*high.production, data=analysis, year > 1999))
summary(out <- lm(any.projects.3year ~ factor(year) + factor(NAME_1) + log(Price)*high.production, data=analysis, year > 1999))
summary(out <- lm(any.projects ~ factor(year) + factor(NAME_1) + log(Price)*high.production, data=analysis, year > 1999))
summary(out <- lm(any.projects.2year ~ factor(year) + factor(NAME_1) + log(Price)*high.production, data=analysis, year > 1999))
summary(out <- lm(any.projects.3year ~ factor(year) + factor(NAME_1) + log(Price)*high.production, data=analysis, year > 1999))
summary(out <- lm(any.projects ~ factor(year) + factor(NAME_1) + log(Price)*high.production, data=analysis, year > 1999))
summary(lm(n.projects.2year ~ factor(year) + factor(NAME_1) + log(Price)*intensity, data=analysis, year > 1999))
summary(out <- lm(n.projects.2year ~ factor(year) + factor(NAME_1) + log(Price)*high.production, data=analysis, year > 1999))
hist(log(price$Price))
summary((log(price$Price)))
summary(out <- lm(n.projects ~ factor(year) + factor(NAME_1) + log(Price)*high.production + region*factor(year), data=analysis, year > 1999))
summary(out <- lm(n.projects ~ factor(year) + factor(NAME_1) +  region*factor(year) + log(Price)*high.production, data=analysis, year > 1999))
summary(out <- lm(n.projects ~ factor(year) + factor(NAME_1) +  region*year + log(Price)*high.production, data=analysis, year > 1999))
summary(out <- lm(n.projects ~ factor(year) + factor(NAME_1)  + log(Price)*high.production, data=analysis, year > 1999))
summary(out <- lm(n.projects ~ factor(year) + factor(NAME_1) +  region*year + log(Price)*high.production, data=analysis, year > 1999))
summary(out <- lm(n.projects.2year ~ factor(year) + factor(NAME_1) + region*year + log(Price)*high.production, data=analysis, year > 1999))
summary(out <- lm(n.projects ~ factor(year) + factor(NAME_1) + log(Price)*high.production, data=analysis, year > 1999))
cvfit <- glmnet::cv.glmnet(x, y)
rm(list = ls())
library(foreign)
library(ggplot2)
library(plyr)
library(stargazer)
library(sandwich)
library(multiwayvcov)
library(MASS)
library(rms)
library(lmtest)
library(ordinal)
library(aod)
setwd("~/Google Drive (Harvard)/GOV_2001_REPLICATION/")
######## Replicating table 2 ######################################################################################
#read in data for tables 2 and 3
tab2_3.dat <- read.dta('01_Data/REPLICATION_APSR_2014_BRQ/REPLICATION_TABLE_2_3_APSR_2014_BRQ.dta')
#run regressions for table 2
tab2.1 <- lm(CivilWarIncidence ~ WarPrevalence14001700 + f_french + f_spain + f_pothco + f_dutch + f_belg + f_italy + f_germ +
region_nNUNN + region_sNUNN + region_wNUNN + region_eNUNN + region_cNUNN,data = tab2_3.dat)
tab2.1$vcovHC <- vcovHC(tab2.1,type='HC1')
tab2.2 <- lm(CivilWarIncidence ~ WarPrevalence14001700 + lrgdpl2631970 + region_nNUNN + region_sNUNN + region_wNUNN + region_eNUNN +
region_cNUNN + f_french + f_spain + f_pothco + f_dutch + f_belg + f_italy + f_germ +
abs_latitudeNUNN + longitudeNUNN + rain_minNUNN  + humid_maxNUNN +  low_tempNUNN + ln_coastline_areaNUNN +
island_dumNUNN + islam + legor_frNUNN + ln_avg_gold_pop + ln_avg_oil_pop + ln_avg_all_diamonds_pop + ETHPOL + yellow + rugged,
data=tab2_3.dat)
tab2.2$vcovHC <- vcovHC(tab2.2,type='HC1')
tab2.3 <- lm(Purges ~ WarPrevalence14001700 + f_french + f_spain + f_pothco + f_dutch + f_belg + f_italy + f_germ +
region_nNUNN + region_nNUNN + region_sNUNN + region_wNUNN + region_eNUNN + region_cNUNN,data = tab2_3.dat)
tab2.3$vcovHC <- vcovHC(tab2.3,type='HC1')
tab2.4 <- lm(Purges ~ WarPrevalence14001700 + lrgdpl2631970 + legor_frNUNN + f_french + f_spain + f_pothco + f_dutch + f_belg +
f_italy + f_germ + region_nNUNN + region_sNUNN + region_wNUNN + region_eNUNN,data=tab2_3.dat)
tab2.4$vcovHC <- vcovHC(tab2.4,type='HC1')
tab2.5 <- polr(as.factor(ConflictOrderedVar) ~ WarPrevalence14001700 + f_french + f_spain + f_pothco + f_dutch + f_belg +
f_italy + f_germ + region_nNUNN + region_sNUNN + region_wNUNN + region_eNUNN + region_cNUNN,
data = tab2_3.dat,Hess = T)
names(coef(tab2.5))#check which variables are linearly dependent
tab2.5 <- polr(as.factor(ConflictOrderedVar) ~ WarPrevalence14001700 + f_french + f_pothco + f_belg +
f_italy + f_germ + region_nNUNN + region_sNUNN + region_wNUNN + region_eNUNN,
data = tab2_3.dat,Hess = T)#re-estimate model dropping f_spain, f_dutch, region_cNUNN
tab2.5$vcov <- vcov(tab2.5)#extract vcov mat
tab2.5$estfun <- estfun(tab2.5)#calculate score mat
tab2.5$vcovHC <- sandwich(tab2.5, meat=crossprod(tab2.5$estfun)/length(tab2_3.dat$ConflictOrderedVar))#calculate robust se
tab2.6 <- polr(as.factor(ConflictOrderedVar) ~ WarPrevalence14001700 + lrgdpl2631970 + legor_frNUNN + f_french + f_spain +
f_pothco + f_dutch + f_belg + f_italy + f_germ + region_nNUNN + region_sNUNN + region_wNUNN + region_eNUNN,
data=tab2_3.dat,Hess = T)
names(coef(tab2.6))#check which variables are linearly dependent
tab2.6 <- polr(as.factor(ConflictOrderedVar) ~ WarPrevalence14001700 + lrgdpl2631970 + legor_frNUNN + f_french +
f_pothco + f_belg + f_italy + f_germ + region_nNUNN + region_sNUNN + region_wNUNN + region_eNUNN,
data=tab2_3.dat,Hess = T)#re-estimate model dropping f_spain,f_dutch
tab2.6$vcov <- vcov(tab2.6)#extract the variance-covariance mat
tab2.6$estfun <- estfun(tab2.6)#calculate score mat
tab2.6$vcovHC <- sandwich(tab2.6, meat=crossprod(tab2.6$estfun)/length(tab2_3.dat$ConflictOrderedVar))#calculate robust se
tab2.7 <- lm(CivilWarIncidence ~ WarPrevalence14001700 + ln_export_area + ln_pop_dens_1400 + lrgdpl2631970 + region_nNUNN + region_sNUNN +
region_wNUNN + region_eNUNN + region_cNUNN + f_french + f_spain + f_pothco + f_dutch + f_belg + f_italy +
f_germ + abs_latitudeNUNN + longitudeNUNN + rain_minNUNN + humid_maxNUNN + low_tempNUNN +
ln_coastline_areaNUNN + island_dumNUNN + islam + legor_frNUNN + ln_avg_gold_pop + ln_avg_oil_pop + ln_avg_all_diamonds_pop +
ETHPOL + yellow + rugged,data = tab2_3.dat)
tab2.7$vcovHC <- vcovHC(tab2.7,type='HC1')
tab2.8 <- lm(Purges ~ WarPrevalence14001700 + ln_export_area + ln_pop_dens_1400 + lrgdpl2631970 + region_nNUNN +
region_sNUNN + region_wNUNN + region_eNUNN + region_cNUNN + f_french + f_spain + f_pothco + f_dutch + f_belg +
f_italy + f_germ + abs_latitudeNUNN + longitudeNUNN + rain_minNUNN + humid_maxNUNN + low_tempNUNN +
ln_coastline_areaNUNN + island_dumNUNN + islam + legor_frNUNN + ln_avg_gold_pop + ln_avg_oil_pop +
ln_avg_all_diamonds_pop + ETHPOL + yellow + rugged,data=tab2_3.dat)
tab2.8$vcovHC <- vcovHC(tab2.8,type='HC1')
tab2.9 <- polr(as.factor(ConflictOrderedVar) ~ WarPrevalence14001700 + ln_export_area + ln_pop_dens_1400 + lrgdpl2631970 + region_nNUNN +
region_sNUNN + region_wNUNN + region_eNUNN + f_french + f_pothco +
f_belg + f_italy + f_germ + abs_latitudeNUNN + longitudeNUNN + rain_minNUNN + humid_maxNUNN +
low_tempNUNN + ln_coastline_areaNUNN + island_dumNUNN + islam+ ln_avg_gold_pop +
ln_avg_oil_pop+ ln_avg_all_diamonds_pop+ yellow  + rugged,data=tab2_3.dat)#dropped legor_frNUNN,ETHPOL for convergence issues
tab2.9$vcov <- vcov(tab2.9)#extract the variance-covariance mat
tab2.9$estfun <- estfun(tab2.9)#calculate score mat
tab2.9$vcovHC <- sandwich(tab2.9, meat=crossprod(tab2.9$estfun)/length(tab2_3.dat$ConflictOrderedVar))#calculate robust se
######## Experimenting with Lasso ######################################################################################
library(glmnet)
data <- tab2_3.dat
#WarPrevalence14001700 + lrgdpl2631970 + region_nNUNN + region_sNUNN + region_wNUNN + region_eNUNN +
#  region_cNUNN + f_french + f_spain + f_pothco + f_dutch + f_belg + f_italy + f_germ +
#  abs_latitudeNUNN + longitudeNUNN + rain_minNUNN  + humid_maxNUNN +  low_tempNUNN + ln_coastline_areaNUNN +
#  island_dumNUNN + islam + legor_frNUNN + ln_avg_gold_pop + ln_avg_oil_pop + ln_avg_all_diamonds_pop + ETHPOL + yellow + rugged
y <- data$CivilWarIncidence
x <- cbind(data$WarPrevalence14001700,data$lrgdpl2631970,data$region_nNUNN,data$abs_latitudeNUNN,data$longitudeNUNN,data$rain_minNUNN,data$humid_maxNUNN,data$low_tempNUNN,data$ln_coastline_areaNUNN)
mat <- na.omit(cbind(y,x))
y <- mat[,1]
x <- mat[,2:ncol(mat)]
fit <- glmnet(x, y)
plot(fit)
getwd()
